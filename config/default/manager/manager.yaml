apiVersion: v1
kind: Namespace
metadata:
  labels:
    pod-security.kubernetes.io/enforce: "restricted"
    # in case mutatepods is set to opt-out mode,
    # make sure that KubeMacPool pods are also opted-out
    # to prevent dead-lock.
  name: system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mac-range-config
  namespace: system
  labels:
    control-plane: mac-controller-manager
    controller-tools.k8s.io: "1.0"
data:
  RANGE_START: 02:00:00:00:00:00
  RANGE_END: 02:FF:FF:FF:FF:FF
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mac-controller-manager
  namespace: system
  labels:
    control-plane: mac-controller-manager
    controller-tools.k8s.io: "1.0"
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      control-plane: mac-controller-manager
      controller-tools.k8s.io: "1.0"
  template:
    metadata:
      labels:
        app: kubemacpool
        control-plane: mac-controller-manager
        controller-tools.k8s.io: "1.0"
      annotations:
        description: KubeMacPool manages MAC allocation to Pods and VMs
    spec:
      tolerations:
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 60
        - key: node.kubernetes.io/not-ready
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 60
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: control-plane
                  operator: In
                  values:
                  - mac-controller-manager
              topologyKey: kubernetes.io/hostname
            weight: 1
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 107
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
          - "--v=production"
          - "--wait-time=300"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        image: quay.io/kubevirt/kubemacpool:latest
        imagePullPolicy: Always
        name: manager
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: RANGE_START
            valueFrom:
              configMapKeyRef:
                name: mac-range-config
                key: RANGE_START
          - name: RANGE_END
            valueFrom:
              configMapKeyRef:
                name: mac-range-config
                key: RANGE_END
          - name: KUBEVIRT_CLIENT_GO_SCHEME_REGISTRATION_VERSION
            value: "v1"
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 8000
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: Content-Type
              value: application/json
            path: /readyz
            port: webhook-server
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
          - name: tls-key-pair
            readOnly: true
            mountPath: /tmp/k8s-webhook-server/serving-certs/
      - args:
        - --logtostderr
        - --secure-listen-address=:8443
        - --upstream=http://127.0.0.1:8080
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        image: quay.io/openshift/origin-kube-rbac-proxy:4.15.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: metrics
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 20Mi
        terminationMessagePolicy: FallbackToLogsOnError
      priorityClassName: system-cluster-critical
      terminationGracePeriodSeconds: 5
      volumes:
        - name: tls-key-pair
          secret:
            secretName: kubemacpool-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager
  namespace: system
  labels:
    control-plane: cert-manager
    controller-tools.k8s.io: "1.0"
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      control-plane: cert-manager
      controller-tools.k8s.io: "1.0"
  template:
    metadata:
      labels:
        app: kubemacpool
        control-plane: cert-manager
        controller-tools.k8s.io: "1.0"
    spec:
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 107
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
          - "--v=production"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        image: quay.io/kubevirt/kubemacpool:latest
        imagePullPolicy: Always
        name: manager
        resources:
          requests:
            cpu: "30m"
            memory: "30Mi"
        env:
          - name: RUN_CERT_MANAGER
            value: ""
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: COMPONENT
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app.kubernetes.io/component']
          - name: PART_OF
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app.kubernetes.io/part-of']
          - name: VERSION
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app.kubernetes.io/version']
          - name: MANAGED_BY
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['app.kubernetes.io/managed-by']
          - name: CA_ROTATE_INTERVAL
            value: "8760h0m0s" # One Year
          - name: CA_OVERLAP_INTERVAL
            value: "24h0m0s" # One day
          - name: CERT_ROTATE_INTERVAL
            value: "4380h0m0s" # Half Year
          - name: CERT_OVERLAP_INTERVAL
            value: "24h0m0s" # One day
      priorityClassName: system-cluster-critical
      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: service
  namespace: kubemacpool-system
spec:
  publishNotReadyAddresses: true
  ports:
    - port: 443
      targetPort: 8000
  selector:
    control-plane: mac-controller-manager
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  # metadata.name will be kubemacpool-mutator (prefix added by kustomize)
  name: mutator
webhooks:
  - name: mutatepods.kubemacpool.io
    sideEffects: NoneOnDryRun
    admissionReviewVersions: ["v1", "v1beta1"]
    clientConfig:
      # caBundle will be updated by the kube-admission-webhook library
      service:
        name: kubemacpool-service
        namespace: kubemacpool-system
        path: "/mutate-pods"
    failurePolicy: Fail
    namespaceSelector:
      matchExpressions:
      - key: runlevel
        operator: NotIn
        values:
          - "0"
          - "1"
      - key: openshift.io/run-level
        operator: NotIn
        values:
          - "0"
          - "1"
    rules:
      - operations: ["CREATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
  - name: mutatevirtualmachines.kubemacpool.io
    sideEffects: NoneOnDryRun
    admissionReviewVersions: ["v1", "v1beta1"]
    clientConfig:
      # caBundle will be updated by the kube-admission-webhook library
      service:
        name: kubemacpool-service
        namespace: kubemacpool-system
        path: "/mutate-virtualmachines"
    failurePolicy: Fail
    namespaceSelector:
      matchExpressions:
      - key: runlevel
        operator: NotIn
        values:
          - "0"
          - "1"
      - key: openshift.io/run-level
        operator: NotIn
        values:
          - "0"
          - "1"
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["kubevirt.io"]
        apiVersions: ["v1"]
        resources: ["virtualmachines"]
